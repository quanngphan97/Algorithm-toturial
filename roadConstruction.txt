#include <iostream>
#include <bits/stdc++.h>
using namespace std;

int N;//Map Size
char mapArr[110][110];//Map information
int arr[110][110];
int totalArr[110][110];
bool vistied[110][110];
int row[4] = {-1,0,1,0};
int col[4] = {0,1,0,-1};

void Input_Data()
{
	cin >> N;
	for (int i = 0; i < N; i++)
	{
		cin >> mapArr[i];
		for(int j = 0; j < N; j++) 
		{
		 arr[i][j] = int(mapArr[i][j] - '0');	 
		 totalArr[i][j] = INT_MAX;  
		 vistied[i][j] = false;
		}	    
	}
}

struct Positon{
    int _x;
    int _y;
};

queue<Positon> p;

void fullfill(Positon p1) 
{
   p.push(p1);
	 int ans = 0;
   while(p.size() > 0) {
		 ans++;
       Positon p2 = p.front();
       p.pop();
       for(int i = 0; i < 4; i++) {
        int x1 = p2._x + row[i];
        int y1 = p2._y + col[i];
        if(x1 < 0 || x1 > N-1) continue;
        if(y1 < 0 || y1 > N-1) continue;
        if(totalArr[x1][y1] > totalArr[p2._x][p2._y] + arr[x1][y1]) {
            totalArr[x1][y1] = totalArr[p2._x][p2._y] + arr[x1][y1];
            Positon p3;
            p3._x = x1;
            p3._y = y1;
            p.push(p3);
        }
    }    
  }
}
int main(){	
	Input_Data();	
	totalArr[0][0] = 0;
	Positon p1;
	p1._x = 0;
	p1._y = 0;
	fullfill(p1);	
	for(int i =0; i< N; i++) {
		for(int j =0; j <N; j++) {
			cout << totalArr[i][j] << " " ;
		}
		cout << endl;
	}
	return 0;
}
