#include <iostream>
#include <bits/stdc++.h>
#include <map>
using namespace std;

#define MAX_CANDIDATE 10000
#define MAX_PARTICIPANT 100000

int NumberCandidate;
int NumberParticipant;

class inforCandidate {
public:
	string name;
	int score = 0;
	int id;
};

bool compare(inforCandidate infor1,inforCandidate infor2) {
	if(infor1.score < infor2.score) {
		return false;
	} else if(infor1.score == infor2.score) {
		return infor1.id < infor2.id;
	} else {
		return true;
	}
}

inforCandidate inforCan[MAX_CANDIDATE];

map<string,int> inforPar;

void inputcondition() 
{
	cin >> 	NumberCandidate;
	
	for(int i = 0; i < NumberCandidate; i++) 
	{
		cin >> inforCan[i].name;
		inforCan[i].id = i;
		inforPar.insert({inforCan[i].name,i});
	}

	cin >> NumberParticipant;

	for(int j = 0; j < NumberParticipant; j++)
	{
		string name;
		int score;
		cin >> name;
		cin >> score;
		if(inforPar.count(name)) 
		{
			inforCan[inforPar[name]].score += score;	
		}
	}
}

void solution()
{
	sort(inforCan, inforCan + NumberCandidate, compare);
	for(int i = 0; i < 3; i++) {
		cout << inforCan[i].name << " " << inforCan[i].score << endl;
	} 
}

int main() 
{
	inputcondition();
	solution();
	
}